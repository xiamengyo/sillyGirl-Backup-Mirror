name: Monitor Releases

# on:
#   schedule:1
#     - cron: '0 */6 * * *'  # 每6小时运行一次
#   workflow_dispatch:  # 允许手动触发

jobs:
  monitor:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        persist-credentials: false
        fetch-depth: 0

    - name: Get latest release info
      id: get_release
      run: |
        # 获取目标仓库的最新release信息
        response=$(curl -s -H "Authorization: token ${{ secrets.PAT }}" \
          "https://api.github.com/repos/callacat/sillyGirl-Backup/releases/latest")
        
        latest_id=$(echo "$response" | grep '"id":' | head -1 | awk '{print $2}' | tr -d ',')
        latest_tag=$(echo "$response" | grep '"tag_name":' | awk -F'"' '{print $4}')
        published_at=$(echo "$response" | grep '"published_at":' | awk -F'"' '{print $4}')
        
        echo "latest_id=$latest_id" >> $GITHUB_ENV
        echo "latest_tag=$latest_tag" >> $GITHUB_ENV
        echo "published_at=$published_at" >> $GITHUB_ENV

    - name: Check if need to backup
      id: check_backup
      run: |
        # 读取上次备份的记录
        if [ -f "last_backup.txt" ]; then
          last_backup_id=$(cat last_backup.txt)
          echo "Last backup ID: $last_backup_id"
        else
          last_backup_id=0
          echo "No previous backup found"
        fi
        
        # 比较是否需要备份
        if [ "$last_backup_id" -lt "${{ env.latest_id }}" ]; then
          echo "New releases detected, triggering backup"
          echo "need_backup=true" >> $GITHUB_ENV
        else
          echo "No new releases found"
          echo "need_backup=false" >> $GITHUB_ENV
        fi

    - name: Trigger backup
      if: env.need_backup == 'true'
      run: |
        curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.PAT }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/${{ github.repository }}/dispatches \
          -d '{"event_type": "backup_releases"}'